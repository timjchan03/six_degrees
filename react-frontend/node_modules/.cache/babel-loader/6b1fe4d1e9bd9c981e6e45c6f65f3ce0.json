{"ast":null,"code":"var _jsxFileName = \"/Users/timchan/Desktop/search-tests/react-frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport Autocomplete from \"./components/Autocomplete\";\nexport default class App extends Component {\n  constructor(props) {\n    super();\n\n    this.showCard = id => {\n      fetch(`http://localhost:3001/artists/${id}`).then(response => response.json()).then(responseJson => {\n        this.setState({\n          artist: responseJson.data\n        });\n      });\n      this.setState({\n        list: false,\n        card: true\n      });\n    };\n\n    this.showList = () => {\n      this.setState({\n        card: false,\n        list: true\n      });\n    };\n\n    this.handleChange = () => {};\n\n    this.state = {\n      list: false,\n      card: false,\n      artists: [],\n      artist: {}\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3001/artists/list\").then(response => response.json()).then(responseJson => {\n      this.setState({\n        artists: responseJson.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, this.state.list ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"Six Degrees of Separation\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"Choose two artists to see how they are connected!\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: () => this.handleChange(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }), this.state.artists.map(artist => /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.showCard(artist.id),\n      className: \"list-group-item list-group-item-action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, artist.name))) : null, this.state.card ? /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card\",\n      style: {\n        width: \"18rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      class: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, this.state.artist.name), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, this.state.artist.runs), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => this.showList(),\n      class: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, \"Back\"))) : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/timchan/Desktop/search-tests/react-frontend/src/App.js"],"names":["React","Component","Autocomplete","App","constructor","props","showCard","id","fetch","then","response","json","responseJson","setState","artist","data","list","card","showList","handleChange","state","artists","componentDidMount","render","map","name","width","runs"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Autocomplete from \"./components/Autocomplete\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      list: false,\n      card: false,\n      artists: [],\n      artist: {},\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3001/artists/list\")\n      .then((response) => response.json())\n      .then((responseJson) => {\n        this.setState({ artists: responseJson.data });\n      });\n  }\n\n  showCard = (id) => {\n    fetch(`http://localhost:3001/artists/${id}`)\n      .then((response) => response.json())\n      .then((responseJson) => {\n        this.setState({ artist: responseJson.data });\n      });\n    this.setState({\n      list: false,\n      card: true,\n    });\n  };\n\n  showList = () => {\n    this.setState({\n      card: false,\n      list: true,\n    });\n  };\n\n  handleChange = () => {};\n\n  render() {\n    return (\n      <div className=\"container\">\n        {this.state.list ? (\n          <div className=\"list-group\">\n            <h1>Six Degrees of Separation</h1>\n            <h2>Choose two artists to see how they are connected!</h2>\n            <input type=\"text\" onChange={() => this.handleChange()} />\n            {this.state.artists.map((artist) => (\n              <li\n                onClick={() => this.showCard(artist.id)}\n                className=\"list-group-item list-group-item-action\"\n              >\n                {artist.name}\n              </li>\n            ))}\n          </div>\n        ) : null}\n        {this.state.card ? (\n          <div class=\"card\" style={{ width: \"18rem\" }}>\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">{this.state.artist.name}</h5>\n              <p class=\"card-text\">{this.state.artist.runs}</p>\n              <div onClick={() => this.showList()} class=\"btn btn-primary\">\n                Back\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}